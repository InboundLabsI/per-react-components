[{"/Users/milukove/dev/permobil-navigator/src/App.js":"1","/Users/milukove/dev/permobil-navigator/src/index.js":"2","/Users/milukove/dev/permobil-navigator/src/components/Contact/index.js":"3","/Users/milukove/dev/permobil-navigator/src/components/Icons/ContactsIcon.js":"4","/Users/milukove/dev/permobil-navigator/src/components/Icons/UserHeadsetIcon.js":"5","/Users/milukove/dev/permobil-navigator/src/components/Icons/QuestionCircleIcon.js":"6","/Users/milukove/dev/permobil-navigator/src/components/Icons/LocationIcon.js":"7","/Users/milukove/dev/permobil-navigator/src/components/Products/index.js":"8","/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductsIcon.js":"9","/Users/milukove/dev/permobil-navigator/src/components/Modal/index.js":"10","/Users/milukove/dev/permobil-navigator/src/components/ProductsDisplay/index.js":"11"},{"size":590,"mtime":1608252163206,"results":"12","hashOfConfig":"13"},{"size":307,"mtime":1607654245239,"results":"14","hashOfConfig":"13"},{"size":13359,"mtime":1608265351365,"results":"15","hashOfConfig":"13"},{"size":1715,"mtime":1608252499280,"results":"16","hashOfConfig":"13"},{"size":2092,"mtime":1607697247627,"results":"17","hashOfConfig":"13"},{"size":1457,"mtime":1607697461152,"results":"18","hashOfConfig":"13"},{"size":1502,"mtime":1607718827415,"results":"19","hashOfConfig":"13"},{"size":7230,"mtime":1608321527074,"results":"20","hashOfConfig":"13"},{"size":1779,"mtime":1608252071625,"results":"21","hashOfConfig":"13"},{"size":1316,"mtime":1608251587977,"results":"22","hashOfConfig":"13"},{"size":3425,"mtime":1608271502222,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qmtvmi",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/Users/milukove/dev/permobil-navigator/src/App.js",[],["49","50"],"/Users/milukove/dev/permobil-navigator/src/index.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Contact/index.js",["51","52","53"],"import React, { useState, useEffect, useRef } from 'react';\nimport HubspotForm from 'react-hubspot-form'\nimport './style.scss';\nimport ContactsIcon from '../Icons/ContactsIcon'\nimport UserHeadsetIcon from '../Icons/UserHeadsetIcon'\nimport QuestionCircleIcon from '../Icons/QuestionCircleIcon'\nimport LocationIcon from '../Icons/LocationIcon'\nimport Modal from '../Modal'\n\nconst Contact = ({ domElement }) => {\n    const [expanded, setExpanded] = useState(false);\n    const [location, setLocation] = useState(null);\n    const [zipError, setZipError] = useState(null)\n    const [searching, setSearching] = useState(false)\n    const [salesOpened, setSalesOpened] = useState(false);\n    const [guessedZip, setGuessedZip] = useState(\"\");\n    const [salesRep, setSalesRep] = useState([]);\n    const [zip, setZip] = useState(\"\");\n    const [selectedRep, setSelectedRep] = useState(null)\n    const [showModalForm, setShowModalForm] = useState(false)\n    const [dropdownAlignment, setDropdownAlignment] = useState('left')\n    const componentRef = useRef(null);\n    const supportURL = domElement.getAttribute('data-support-url')\n    const ticketSubmissionURL = domElement.getAttribute('data-ticket-submission-url')\n    const salesContactFormId = domElement.getAttribute('data-sales-contact-form-id')\n    const salesContactPortalId = domElement.getAttribute('data-sales-contact-portal-id')\n\n    const handleSalesMenuClick = (event) => {\n        event.preventDefault();\n        setSalesOpened(true);\n    }\n\n    const handleZipInputChange = (event) => {\n        if (!!event.target.value) {\n            setSearching(true)\n        } else {\n            setSearching(false)\n        }\n        setZipError(null)\n        setZip(event.target.value)\n    }\n    const handleContactSalesButtonClick = (event, rep) => {\n        event.preventDefault();\n        closeDropdown();\n        if (!!rep) {\n            setSelectedRep(rep)\n        }\n    }\n\n    // Handle main button click\n    const handleButtonClick = (event) => {\n        if (!!expanded) {\n            closeDropdown()\n        } else {\n            openDropdown()\n        }\n    }\n\n    const onContactRepFormReady = (form, rep) => {\n        console.log('onContactRepFormReady form', form);\n        console.log('onContactRepFormReady rep', rep);\n    }\n\n    const closeDropdown = () => {\n        setExpanded(false);\n        setSalesOpened(false);\n    }\n\n    const openDropdown = () => {\n        setExpanded(true);\n        setSalesOpened(false);\n    }\n\n    const renderResult = (result) => (\n        <div className=\"contact-component__sales-result\" key={result.key}>\n            <div className=\"contact-component__sales-result-image\" style={{ backgroundImage: !!result.sales_image ? `url(${result.sales_image})` : 'none' }}></div>\n            <div className=\"contact-component__sales-result-details\">\n                {!!result.name && (\n                    <p className=\"contact-component__sales-result-details-name\">{result.name}</p>\n                )}\n                {!!result.jobtitle && (\n                    <p className=\"contact-component__sales-result-details-jobtitle\">{result.jobtitle}</p>\n                )}\n                <button className=\"contact-component__sales-result-details-button\" onClick={(event) => { handleContactSalesButtonClick(event, result) }}>Contact</button>\n            </div>\n        </div>\n    )\n\n    const renderSalesNavigator = () => (\n        <div className=\"contact-component__sales\">\n            {!!zip && zip.length === 5 && (\n                <div style={{ 'display': 'none' }}>\n                    <iframe title=\"sales-locator\" src={`https://hub.permobil.com/sales-locator-find-v2?zip=${zip}`}></iframe>\n                </div>\n            )}\n            <p className=\"contact-component__sales-title\">Sales</p>\n            <form className=\"contact-component__sales-form\">\n                <label className=\"contact-component__sales-form-label\" htmlFor=\"zipcode\">Type Zipcode</label>\n                <div className=\"contact-component__sales-form-input\">\n                    {!!zipError && (\n                        <p class=\"contact-component__sales-form-input-error\">{zipError}</p>\n                    )}\n                    <LocationIcon />\n                    <input\n                        type=\"text\"\n                        required\n                        value={zip}\n                        onChange={handleZipInputChange}\n                        id=\"zipcode\"\n                        name=\"zipcode\"\n                        maxlength=\"5\"\n                    />\n                </div>\n            </form>\n            {!!searching && !!zip && zip.length === 5 && (\n                <div className=\"contact-component__sales-results\">\n                    <p className=\"contact-component__sales-searching\">Locating the nearest sales specialist for you...</p>\n                </div>\n            )}\n            {!!salesRep && salesRep.length > 0 && !searching && !!zip && (\n                <div className=\"contact-component__sales-results\">\n                    <p className=\"contact-component__sales-results-title\">Specialists{!!location ? ` in \"${location}\"` : ''}</p>\n                    {salesRep.slice(0, 3).map(renderResult)}\n                </div>\n            )}\n        </div>\n    );\n\n    const renderMenu = () => (\n        <ul className=\"contact-component__dropdown-menu\" role=\"menu\">\n            <li>\n                <a href=\"#\" role=\"menuitem\" onClick={handleSalesMenuClick}>\n                    <UserHeadsetIcon />\n                    <span>Sales</span>\n                </a>\n            </li>\n            {!!supportURL && (\n                <li>\n                    <a href={supportURL} role=\"menuitem\">\n                        <QuestionCircleIcon />\n                        <span>Support</span>\n                    </a>\n                </li>\n            )}\n        </ul>\n    )\n\n    const renderDropdown = () => (\n        <div className={`contact-component__dropdown contact-component__dropdown--${dropdownAlignment}`}>\n            {!!salesOpened ? renderSalesNavigator() : (\n                renderMenu()\n            )}\n        </div>\n    )\n\n    // Listen to window resize\n    useEffect(() => {\n        function updatedropdownAlignment() {\n            const offsetRight = window.innerWidth - componentRef.current.offsetLeft - componentRef.current.offsetWidth;\n            if (offsetRight < 200) {\n                if (componentRef.current.offsetLeft < 150) {\n                    setDropdownAlignment('center');\n                } else {\n                    setDropdownAlignment('right');\n                }\n            } else {\n                setDropdownAlignment('left');\n            }\n        }\n        window.addEventListener('resize', updatedropdownAlignment);\n        updatedropdownAlignment();\n        return () => window.removeEventListener('resize', updatedropdownAlignment);\n    }, []);\n\n    // Listen to post messages\n    useEffect(() => {\n        const handler = event => {\n            const data = event.data\n            if (!!data) {\n                if (!!data.error && data.error === 'not_in_us') {\n                    setGuessedZip(\"\");\n                    return;\n                }\n                if (!!data.error && (data.error === 'invalid_zip' || data.error === 'Invalid zip code')) {\n                    setZipError('Invalid Zipcode');\n                    setSalesRep([]);\n                    setSearching(false)\n                    return;\n                }\n                if (!!data.error && data.error === 'unknown_failure') {\n                    setZipError('Unknown failure');\n                    setSalesRep([]);\n                    setSearching(false)\n                    return;\n                }\n\n\n                if (!!data.type && data.type === 'default_zip' && !!data.zip) {\n                    setGuessedZip(data.zip);\n                    setZip(data.zip);\n                    setSearching(true)\n                    return;\n                }\n\n                if (!!data.type && data.type === 'zip_search_result_processed' && !!data.result && !!data.result.reps && data.result.reps.length > 0) {\n                    const result = data.result.reps.map(rep => ({\n                        key: rep.key,\n                        name: rep.name,\n                        jobtitle: rep.details.jobtitle,\n                        sales_image: rep.details.sales_image\n                    }))\n                    setSalesRep(result);\n                    setZipError(null);\n                    setSearching(false)\n                    return;\n                }\n            }\n        }\n        window.addEventListener(\"message\", handler)\n        return () => window.removeEventListener(\"message\", handler)\n    }, [])\n\n    // Handle click outside the component\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (componentRef.current && !componentRef.current.contains(event.target)) {\n                closeDropdown()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [componentRef]);\n\n    return (\n        <div className=\"contact-component\" id=\"contact-component\" ref={componentRef}>\n            <button\n                aria-haspopup=\"true\"\n                aria-expanded={expanded}\n                tabindex=\"0\"\n                onClick={handleButtonClick}\n                className={`contact-component__button ${expanded ? 'dropdown-opened' : 'dropdown-closed'}`}\n            >\n                <ContactsIcon />\n                <span>Contact</span>\n            </button>\n            <div style={{ 'display': 'none' }}>\n                <iframe title=\"sales-locator\" src=\"https://hub.permobil.com/sales-locator-find-v2\"></iframe>\n            </div>\n            {!!expanded ? renderDropdown() : null}\n\n            <Modal\n                modalIsOpen={!!selectedRep}\n                closeModal={() => {\n                    setSelectedRep(null);\n                    setShowModalForm(false)\n                }}\n            >\n                {!!selectedRep && (\n                    <div className=\"sales-modal\">\n                        <div className=\"sales-modal__container\">\n                            <div className=\"sales-modal__image\" style={{ backgroundImage: `url(${selectedRep.sales_image})` }}></div>\n                            <h2 className=\"sales-modal__title\">{!!showModalForm && !!selectedRep.name ? `Reach out to ${selectedRep.name}` : 'How can we help you?'}</h2>\n                            {!showModalForm && (\n                                <div className=\"sales-modal__buttons\">\n                                    {!!ticketSubmissionURL && (\n                                        <a href={ticketSubmissionURL} className=\"sales-modal__button\">I need help with a product I purchased</a>\n                                    )}\n                                    {!!salesContactFormId && !!salesContactPortalId && (\n                                        <button className=\"sales-modal__button\" onClick={() => {\n                                            setShowModalForm(true)\n                                        }}>I'd like to buy a new product</button>\n                                    )}\n                                    \n\n                                </div>\n                            )}\n                            {!!salesContactFormId && !!salesContactPortalId && !!showModalForm && (\n                                <div className=\"sales-modal__form\">\n                                    <HubspotForm\n                                        portalId='1624307'\n                                        formId='4553cfe7-9000-4211-8f8c-31b856fb8910'\n                                        onSubmit={() => {\n                                            console.log('Submit!')\n                                        }}\n                                        onReady={(form) => onContactRepFormReady(form, selectedRep)}\n                                        loading={<p>Loading...</p>}\n                                    />\n                                </div>\n                            )}\n                            \n                        </div>\n                    </div>\n                )}\n\n            </Modal>\n        </div>\n    )\n}\n\nexport default Contact;\n\n\n/*\n\nformElem.find(\"[name=sales_rep_name]\").val(rep.name).change();\n    formElem.find(\"[name=sales_rep_email]\").val(rep.details.email || \"\").change();\n    formElem.find(\"[name=sales_locator_extra_email]\").val(\"\").change();\n    if (rep.details.email) {\n      for (var i = 0; i < extraEmailPairs.length; i++) {\n        var pair = extraEmailPairs[i].map(function(email) { return email.toLowerCase(); });\n        var index = pair.indexOf(rep.details.email.toLowerCase());\n        if (index < 0) {\n          continue;\n        }\n        pair.splice(index, 1);\n        formElem.find(\"[name=sales_locator_extra_email]\").val(pair[0]).change();\n        formElem.find(\"[name=sales_locator_extra_email_2]\").val(pair[1] || \"\").change();\n        formElem.find(\"[name=sales_locator_extra_email_3]\").val(pair[2] || \"\").change();\n      }\n    }\n    formElem.find(\"[name=entered_zip]\").val(lastZip || \"\").change();\n    formElem.find(\"[name=sales_rep_owner_id]\").val(rep.ownerId).change();\n\n    */","/Users/milukove/dev/permobil-navigator/src/components/Icons/ContactsIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/UserHeadsetIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/QuestionCircleIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/LocationIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Products/index.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductsIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Modal/index.js",[],"/Users/milukove/dev/permobil-navigator/src/components/ProductsDisplay/index.js",["54"],"import React, { useRef, useEffect } from 'react'\nimport { CurrentRefinements, InfiniteHits, RefinementList } from 'react-instantsearch-dom';\nimport './style.scss';\n\nconst ProductsDisplay = (props) => {\n    const { isOpened, onClose, selectedCategory } = props;\n    const componentRef = useRef(null);\n\n    const closeFilters = () => {\n        onClose();\n    }\n\n    const renderHit = ({ hit }) => {\n        const hitImage = !!hit.media && !!hit.media.thumbnails && !!hit.media.thumbnails.large ? hit.media.thumbnails.large : '';\n\n        return (<a href={hit.url} className=\"products-display-component__results-hit\">\n            <div className=\"products-display-component__results-hit-image\" style={{ backgroundImage: `url(${hitImage})` }}></div>\n            <div className=\"products-display-component__results-hit-text\">\n                <span>{hit.title}</span>\n            </div>\n        </a>)\n    }\n\n\n    const renderResults = () => (\n        <div className=\"products-display-component__results\">\n            <div className=\"products-display-component__results-header\">\n                <CurrentRefinements />\n            </div>\n            <div className=\"products-display-component__results-body\">\n                <InfiniteHits hitComponent={renderHit} />\n            </div>\n        </div>\n    )\n\n    const renderFilters = () => (\n        <div className=\"products-display-component__filters\">\n            <div className=\"products-display-component__filters-header\">\n                <span className=\"products-display-component__filters-title\">FILTERS</span>\n                <svg onClick={closeFilters} width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M10.0469 8L14.875 3.21875L15.8594 2.23438C16 2.09375 16 1.85938 15.8594 1.67188L14.8281 0.640625C14.6406 0.5 14.4062 0.5 14.2656 0.640625L8.5 6.45312L2.6875 0.640625C2.54688 0.5 2.3125 0.5 2.125 0.640625L1.09375 1.67188C0.953125 1.85938 0.953125 2.09375 1.09375 2.23438L6.90625 8L1.09375 13.8125C0.953125 13.9531 0.953125 14.1875 1.09375 14.375L2.125 15.4062C2.3125 15.5469 2.54688 15.5469 2.6875 15.4062L8.5 9.59375L13.2812 14.4219L14.2656 15.4062C14.4062 15.5469 14.6406 15.5469 14.8281 15.4062L15.8594 14.375C16 14.1875 16 13.9531 15.8594 13.8125L10.0469 8Z\" fill=\"currentColor\" />\n                </svg>\n            </div>\n            <div className=\"products-display-component__filters-body\">\n                <RefinementList attribute=\"categories\" defaultRefinement={[selectedCategory]} />\n                <RefinementList attribute=\"filters.diagnostic\" />\n                <RefinementList attribute=\"filters.movement\" />\n                <RefinementList attribute=\"filters.weight\" />\n            </div>\n        </div>\n    )\n\n    // Handle click outside the component\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (componentRef.current && !componentRef.current.contains(event.target)) {\n                closeFilters();\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [componentRef]);\n\n    return isOpened ? (\n        <div className=\"products-display-component\" ref={componentRef}>\n            {renderFilters()}\n            {renderResults()}\n        </div>\n    ) : null;\n}\n\nexport default ProductsDisplay\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":12,"column":22,"nodeType":"61","messageId":"62","endLine":12,"endColumn":33},{"ruleId":"59","severity":1,"message":"63","line":16,"column":12,"nodeType":"61","messageId":"62","endLine":16,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":132,"column":17,"nodeType":"66","endLine":132,"endColumn":76},{"ruleId":"67","severity":1,"message":"68","line":64,"column":8,"nodeType":"69","endLine":64,"endColumn":22,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'setLocation' is assigned a value but never used.","Identifier","unusedVar","'guessedZip' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'closeFilters'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [closeFilters, componentRef]",{"range":"76","text":"77"},[3188,3202],"[closeFilters, componentRef]"]