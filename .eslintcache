[{"/Users/milukove/dev/permobil-navigator/src/App.js":"1","/Users/milukove/dev/permobil-navigator/src/index.js":"2","/Users/milukove/dev/permobil-navigator/src/components/Contact/index.js":"3","/Users/milukove/dev/permobil-navigator/src/components/Icons/ContactsIcon.js":"4","/Users/milukove/dev/permobil-navigator/src/components/Icons/UserHeadsetIcon.js":"5","/Users/milukove/dev/permobil-navigator/src/components/Icons/QuestionCircleIcon.js":"6","/Users/milukove/dev/permobil-navigator/src/components/Icons/LocationIcon.js":"7","/Users/milukove/dev/permobil-navigator/src/components/Products/index.js":"8","/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductsIcon.js":"9","/Users/milukove/dev/permobil-navigator/src/components/Modal/index.js":"10","/Users/milukove/dev/permobil-navigator/src/components/ProductsDisplay/index.js":"11","/Users/milukove/dev/permobil-navigator/src/components/User/index.js":"12","/Users/milukove/dev/permobil-navigator/src/components/Icons/EditProfileIcon.js":"13","/Users/milukove/dev/permobil-navigator/src/components/Icons/LogoutIcon.js":"14","/Users/milukove/dev/permobil-navigator/src/components/Icons/PreferencesIcon.js":"15","/Users/milukove/dev/permobil-navigator/src/components/Search/index.js":"16","/Users/milukove/dev/permobil-navigator/src/components/Icons/CloseIcon.js":"17","/Users/milukove/dev/permobil-navigator/src/components/Icons/DocumentIcon.js":"18","/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductIcon.js":"19","/Users/milukove/dev/permobil-navigator/src/components/Icons/ChevronLeftIcon.js":"20","/Users/milukove/dev/permobil-navigator/src/components/Icons/LoadingIcon.js":"21","/Users/milukove/dev/permobil-navigator/src/components/Icons/ArrowRightIcon.js":"22"},{"size":966,"mtime":1610585149120,"results":"23","hashOfConfig":"24"},{"size":307,"mtime":1607654245239,"results":"25","hashOfConfig":"24"},{"size":16577,"mtime":1611281031148,"results":"26","hashOfConfig":"24"},{"size":1715,"mtime":1608252499280,"results":"27","hashOfConfig":"24"},{"size":2092,"mtime":1607697247627,"results":"28","hashOfConfig":"24"},{"size":1457,"mtime":1607697461152,"results":"29","hashOfConfig":"24"},{"size":1502,"mtime":1607718827415,"results":"30","hashOfConfig":"24"},{"size":7465,"mtime":1611286763001,"results":"31","hashOfConfig":"24"},{"size":1779,"mtime":1608252071625,"results":"32","hashOfConfig":"24"},{"size":1254,"mtime":1611020671303,"results":"33","hashOfConfig":"24"},{"size":14326,"mtime":1611797893058,"results":"34","hashOfConfig":"24"},{"size":6217,"mtime":1610477213529,"results":"35","hashOfConfig":"24"},{"size":1232,"mtime":1610477213528,"results":"36","hashOfConfig":"24"},{"size":1133,"mtime":1610477213529,"results":"37","hashOfConfig":"24"},{"size":2834,"mtime":1610477213529,"results":"38","hashOfConfig":"24"},{"size":7868,"mtime":1611116226729,"results":"39","hashOfConfig":"24"},{"size":422,"mtime":1610585149121,"results":"40","hashOfConfig":"24"},{"size":1754,"mtime":1610585149121,"results":"41","hashOfConfig":"24"},{"size":1262,"mtime":1610585149121,"results":"42","hashOfConfig":"24"},{"size":630,"mtime":1610585149121,"results":"43","hashOfConfig":"24"},{"size":891,"mtime":1610688472556,"results":"44","hashOfConfig":"24"},{"size":423,"mtime":1611020671303,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1qmtvmi",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/milukove/dev/permobil-navigator/src/App.js",[],["94","95"],"/Users/milukove/dev/permobil-navigator/src/index.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Contact/index.js",["96"],"import React, { useState, useEffect, useRef } from 'react';\nimport HubspotForm from 'react-hubspot-form'\nimport './style.scss';\nimport ContactsIcon from '../Icons/ContactsIcon'\nimport UserHeadsetIcon from '../Icons/UserHeadsetIcon'\nimport QuestionCircleIcon from '../Icons/QuestionCircleIcon'\nimport LocationIcon from '../Icons/LocationIcon'\nimport Modal from '../Modal'\nimport LoadingIcon from '../Icons/LoadingIcon';\nimport CloseIcon from '../Icons/CloseIcon'\nimport ArrowRightIcon from '../Icons/ArrowRightIcon'\n\nconst menuItems = [\n    {\n        url: \"https://permobilus.com/dealer-locator/international-dealers\",\n        label: \"Roho International Dealers\"\n    },\n    {\n        url: \"https://permobilus.com/dealer-locator/online-retailers\",\n        label: \"Roho Online Dealers\"\n    }\n]\n\nconst Contact = ({ domElement }) => {\n    const [expanded, setExpanded] = useState(false);\n    const [zipError, setZipError] = useState(null)\n    const [searching, setSearching] = useState(false)\n    let savedReps = localStorage.getItem('savedReps');\n    if (!!savedReps) savedReps = JSON.parse(savedReps);\n    const [salesRep, setSalesRep] = useState(!!savedReps ? savedReps : []);\n    const savedZip = localStorage.getItem('savedZip');\n    const [zip, setZip] = useState(!!savedZip ? savedZip : \"\");\n    const [selectedRep, setSelectedRep] = useState(null)\n    const [showModalForm, setShowModalForm] = useState(false)\n    const [dropdownAlignment, setDropdownAlignment] = useState('left')\n    const componentRef = useRef(null);\n    const supportURL = domElement.getAttribute('data-support-url')\n    const ticketSubmissionURL = domElement.getAttribute('data-ticket-submission-url')\n    const salesContactFormId = domElement.getAttribute('data-sales-contact-form-id')\n    const salesContactPortalId = domElement.getAttribute('data-sales-contact-portal-id')\n    const headerHeight = domElement.getAttribute('data-header-height');\n    const showMenu = domElement.getAttribute('data-show-menu');\n\n    const handleZipInputChange = (event) => {\n        if (!!event.target.value && event.target.value.length >= 5) {\n            setSearching(true)\n        } else {\n            setSearching(false)\n        }\n        setZipError(null)\n        setZip(event.target.value)\n    }\n    const handleContactSalesButtonClick = (event, rep) => {\n        event.preventDefault();\n        closeDropdown();\n        if (!!rep) {\n            setSelectedRep(rep)\n        }\n    }\n\n    // Handle main button click\n    const handleButtonClick = (event) => {\n        if (!!expanded) {\n            closeDropdown()\n        } else {\n            openDropdown()\n        }\n    }\n\n    const onContactRepFormReady = (form, rep) => {\n        let submitButton = document.querySelector('.sales-modal__form input[type=\"submit\"]')\n        if (!!submitButton) {\n            //submitButton.value = `Reach out to ${selectedRep.name}`;\n        }\n    }\n\n    const handleModalCloseButtonKeyPress = (e) => {\n        if (e.charCode === 13) {\n            e.preventDefault();\n            setSelectedRep(null);\n            setShowModalForm(false)\n        }\n    }\n\n    const handleModalCloseButtonClick = (e) => {\n        e.preventDefault();\n        setSelectedRep(null);\n        setShowModalForm(false)\n    }\n\n    const closeDropdown = () => {\n        setExpanded(false);\n        //setSalesOpened(false);\n    }\n\n    const openDropdown = () => {\n        setExpanded(true);\n        //setSalesOpened(false);\n    }\n\n    const renderResult = (result) => (\n        <div className=\"contact-component__sales-result\" key={result.key}>\n            <div className=\"contact-component__sales-result-image\" style={{ backgroundImage: !!result.sales_image ? `url(${result.sales_image})` : 'none' }}></div>\n            <div className=\"contact-component__sales-result-details\">\n                {!!result.name && (\n                    <p className=\"contact-component__sales-result-details-name\">{result.name}</p>\n                )}\n                {!!result.jobtitle && (\n                    <p className=\"contact-component__sales-result-details-jobtitle\">{result.jobtitle}</p>\n                )}\n                <button className=\"contact-component__sales-result-details-button\" onClick={(event) => { handleContactSalesButtonClick(event, result) }}>Contact</button>\n            </div>\n        </div>\n    )\n\n    const renderSalesNavigator = () => (\n        <div className={`contact-component__sales ${!!salesRep && salesRep.length > 0 && !searching && !!zip ? 'contact-component__sales--with-results' : ''}`}>\n            {!!zip && zip.length === 5 && (\n                <div style={{ 'display': 'none' }}>\n                    <iframe title=\"sales-locator\" src={`https://hub.permobil.com/sales-locator-find-v2?zip=${zip}`}></iframe>\n                </div>\n            )}\n            <p className=\"contact-component__sales-title\"><UserHeadsetIcon /> <span>Sales</span></p>\n            {!searching && (!salesRep || salesRep.length < 1) && (\n                <div className=\"contact-component__sales-form\">\n                    <label className=\"contact-component__sales-form-label\" htmlFor=\"zipcode\">Find a sales specialist near you</label>\n                    <div className=\"contact-component__sales-form-input\">\n                        <LocationIcon />\n                        <input\n                            type=\"text\"\n                            required\n                            value={zip}\n                            onChange={handleZipInputChange}\n                            id=\"zipcode\"\n                            name=\"zipcode\"\n                            maxLength=\"5\"\n                            onKeyPress={e => {\n                                if (e.charCode === 13) {\n                                    e.preventDefault();\n                                }\n                            }}\n                            placeholder=\"Enter zip code\"\n                        />\n                    </div>\n                    {!!zipError && (\n                        <p class=\"contact-component__sales-form-input-error\">{zipError}</p>\n                    )}\n                </div>\n            )}\n            {!!searching && !!zip && zip.length === 5 && (\n                <div className=\"contact-component__sales-results\">\n                    <p className=\"contact-component__sales-searching\">Searching in zip code <strong>{zip}...</strong></p>\n                    <div className=\"contact-component__sales-loading\"><LoadingIcon /></div>\n                </div>\n            )}\n            <div className={`contact-component__sales-results-wrapper contact-component__sales-results-wrapper--length-${salesRep.length > 3 ? '3' : salesRep.length}`}>\n                {!!salesRep && salesRep.length > 0 && !searching && !!zip && (\n                    <div className=\"contact-component__sales-results\">\n                        <p className=\"contact-component__sales-results-title\">Specialists found in <strong>{zip}</strong><br />(<span className=\"contact-component__sales-results-change\" onClick={(e) => {\n                            e.preventDefault();\n                            setSalesRep([])\n                            setZip(null)\n                        }}>change zip code</span>)</p>\n                        {salesRep.slice(0, 3).map(renderResult)}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n\n    const renderSupportLink = () => !!supportURL ? (\n        <div className=\"contact-component__dropdown-support\">\n            <a href={supportURL} className=\"contact-component__dropdown-support-link\">\n                <QuestionCircleIcon />\n                <span>Support</span>\n            </a>\n        </div>\n    ) : null\n\n    const renderMenu = () => !!menuItems && menuItems.length > 0 ? (\n        <ul className=\"contact-component__dropdown-menu\">\n            {menuItems.map(menuItem => (\n                <li>\n                    <a href={menuItem.url}>\n                        <span>{menuItem.label}</span>\n                    </a>\n                </li>\n            ))}\n        </ul>\n    ) : null\n\n    const renderDropdown = () => (\n        <div className={`contact-component__dropdown contact-component__dropdown--${dropdownAlignment}`}>\n            {renderSalesNavigator()}\n            {renderSupportLink()}\n            {!!showMenu && showMenu === 'true' ? renderMenu() : null}\n        </div>\n    )\n\n    const renderModalCloseButton = () => (\n        <div className=\"sales-modal__close\">\n            <span\n                tabIndex=\"0\"\n                onClick={handleModalCloseButtonClick}\n                onKeyPress={handleModalCloseButtonKeyPress}\n            ><CloseIcon /></span>\n        </div>\n    )\n\n    const renderSalesRepModal = () => !!selectedRep ? (\n        <div className=\"sales-modal\">\n            <div className=\"sales-modal__container\">\n\n                <div className=\"sales-modal__image\" style={{ backgroundImage: `url(${selectedRep.sales_image})` }}></div>\n\n                <div className=\"sales-modal__content\">\n\n                    {renderModalCloseButton()}\n\n                    {!!showModalForm && !!selectedRep.name ? null : <h2 className=\"sales-modal__title\">How can we help you?</h2>}\n\n                    {!showModalForm && (\n                        <div className=\"sales-modal__buttons\">\n                            {!!ticketSubmissionURL && (\n                                <a href={ticketSubmissionURL} className=\"sales-modal__button\"><span>I need help with a product I purchased</span><ArrowRightIcon /></a>\n                            )}\n                            {!!salesContactFormId && !!salesContactPortalId && (\n                                <button className=\"sales-modal__button\" onClick={() => {\n                                    setShowModalForm(true)\n                                }}><span>I'd like to buy a new product</span><ArrowRightIcon /></button>\n                            )}\n                        </div>\n                    )}\n\n                    <div style={{ display: !!salesContactFormId && !!salesContactPortalId && !!showModalForm ? 'block' : 'none' }}>\n                        <div className=\"sales-modal__form\">\n                            <HubspotForm\n                                portalId={salesContactPortalId}\n                                formId={salesContactFormId}\n                                inlineMessage=\"Thanks for submitting the form\"\n                                onSubmit={() => {\n                                    //console.log('Submit!');\n                                }}\n                                onReady={(form) => onContactRepFormReady(form, selectedRep)}\n                                loading={<div>\n                                    <h2 className=\"sales-modal__title\">Loading form...</h2>\n                                    <div style={{ textAlign: 'center' }}><LoadingIcon /></div>\n                                </div>}\n                            />\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : null;\n\n    const renderDefaultZipIframe = () => (\n        <div style={{ 'display': 'none' }}>\n            <iframe title=\"sales-locator\" src=\"https://hub.permobil.com/sales-locator-find-v2\"></iframe>\n        </div>\n    )\n\n    const renderContactButton = () => (\n        <button\n            aria-haspopup=\"true\"\n            aria-expanded={expanded}\n            tabIndex=\"0\"\n            onClick={handleButtonClick}\n            className={`contact-component__button ${expanded ? 'dropdown-opened' : 'dropdown-closed'}`}\n        >\n            <ContactsIcon />\n            <span>Contact</span>\n        </button>\n    )\n\n    // Listen to window resize\n    useEffect(() => {\n        function updatedropdownAlignment() {\n            const offsetRight = window.innerWidth - componentRef.current.offsetLeft - componentRef.current.offsetWidth;\n            if (offsetRight < 200) {\n                if (componentRef.current.offsetLeft < 150) {\n                    setDropdownAlignment('center');\n                } else {\n                    setDropdownAlignment('right');\n                }\n            } else {\n                setDropdownAlignment('left');\n            }\n        }\n        window.addEventListener('resize', updatedropdownAlignment);\n        updatedropdownAlignment();\n        return () => window.removeEventListener('resize', updatedropdownAlignment);\n    }, []);\n\n    // Listen to post messages\n    useEffect(() => {\n        const handler = event => {\n            const data = event.data\n            if (!!data) {\n                if (!!data.error && data.error === 'not_in_us') {\n                    return;\n                }\n                if (!!data.error && (data.error === 'invalid_zip' || data.error === 'Invalid zip code')) {\n                    setZipError('Invalid zip code, please try again');\n                    setSalesRep([]);\n                    setSearching(false)\n                    return;\n                }\n                if (!!data.error && data.error === 'unknown_failure') {\n                    setZipError('Unknown failure, please try again');\n                    setSalesRep([]);\n                    setSearching(false)\n                    return;\n                }\n\n\n                if (!!data.type && data.type === 'default_zip' && !!data.zip) {\n                    if (!savedZip) {\n                        setZip(data.zip);\n                        setSearching(true)\n                        localStorage.setItem('savedZip', data.zip)\n                    }\n                    return;\n                }\n\n                if (!!data.type && data.type === 'zip_search_result_processed' && !!data.result && !!data.result.reps && data.result.reps.length > 0) {\n                    const result = data.result.reps.map(rep => ({\n                        key: rep.key,\n                        name: rep.name,\n                        jobtitle: rep.details.jobtitle,\n                        sales_image: rep.details.sales_image\n                    }))\n                    setSalesRep(result);\n                    setZipError(null);\n                    setSearching(false)\n                    localStorage.setItem('savedZip', data.zip);\n                    localStorage.setItem('savedReps', JSON.stringify(result));\n                    return;\n                }\n            }\n        }\n        window.addEventListener(\"message\", handler)\n        return () => window.removeEventListener(\"message\", handler)\n    }, [])\n\n    // Handle click outside the component\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (componentRef.current && !componentRef.current.contains(event.target)) {\n                closeDropdown()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [componentRef]);\n\n    return (\n        <div className=\"contact-component\" id=\"contact-component\" ref={componentRef} style={{ '--header-height': !!headerHeight ? headerHeight + 'px' : '60px' }}>\n\n            {renderContactButton()}\n\n            {renderDefaultZipIframe()}\n\n            {!!expanded ? renderDropdown() : null}\n\n            <Modal\n                modalIsOpen={!!selectedRep}\n                closeModal={() => {\n                    setSelectedRep(null);\n                    setShowModalForm(false)\n                }}\n            >\n                {renderSalesRepModal()}\n            </Modal>\n\n        </div>\n    )\n}\n\nexport default Contact;\n\n\n/*\n\nformElem.find(\"[name=sales_rep_name]\").val(rep.name).change();\n    formElem.find(\"[name=sales_rep_email]\").val(rep.details.email || \"\").change();\n    formElem.find(\"[name=sales_locator_extra_email]\").val(\"\").change();\n    if (rep.details.email) {\n      for (var i = 0; i < extraEmailPairs.length; i++) {\n        var pair = extraEmailPairs[i].map(function(email) { return email.toLowerCase(); });\n        var index = pair.indexOf(rep.details.email.toLowerCase());\n        if (index < 0) {\n          continue;\n        }\n        pair.splice(index, 1);\n        formElem.find(\"[name=sales_locator_extra_email]\").val(pair[0]).change();\n        formElem.find(\"[name=sales_locator_extra_email_2]\").val(pair[1] || \"\").change();\n        formElem.find(\"[name=sales_locator_extra_email_3]\").val(pair[2] || \"\").change();\n      }\n    }\n    formElem.find(\"[name=entered_zip]\").val(lastZip || \"\").change();\n    formElem.find(\"[name=sales_rep_owner_id]\").val(rep.ownerId).change();\n\n    */","/Users/milukove/dev/permobil-navigator/src/components/Icons/ContactsIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/UserHeadsetIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/QuestionCircleIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/LocationIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Products/index.js",["97"],"import React, { useState, useEffect, useRef } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';\nimport './style.scss';\nimport ProductsIcon from '../Icons/ProductsIcon'\nimport ProductsDisplay from '../ProductsDisplay'\n\nconst menuItems = [\n    {\n        subtitle: 'EXPLORE',\n        title: 'Power Wheelchairs',\n        image: 'https://f.hubspotusercontent00.net/hubfs/1624307/social-suggested-images/power.png',\n        url: 'https://permobilus.com/products/power-wheelchairs-by-permobil',\n        categoryName: 'Power Wheelchairs',\n        order: 1\n    },\n    {\n        subtitle: 'EXPLORE',\n        title: 'Manual Wheelchairs',\n        image: 'https://f.hubspotusercontent00.net/hubfs/1624307/social-suggested-images/manual.png',\n        url: 'https://permobilus.com/products/tilite-manual-wheelchairs-smartdrive-power-assist/',\n        categoryName: 'Manual Wheelchairs',\n        order: 2\n    },\n    {\n        subtitle: 'EXPLORE',\n        title: 'Seating / Positioning',\n        image: 'https://f.hubspotusercontent00.net/hubfs/1624307/social-suggested-images/seat.png',\n        url: 'https://permobilus.com/products/seating-and-positioning-by-roho/',\n        categoryName: 'Seating and Positioning',\n        order: 3\n    }\n]\n\nconst Products = ({ domElement }) => {\n    const [expanded, setExpanded] = useState(false);\n    const [dropdownAlignment, setDropdownAlignment] = useState('left');\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const componentRef = useRef(null);\n    const algoliaAppID = domElement.getAttribute('data-algolia-app-id');\n    const algoliaSearchKey = domElement.getAttribute('data-algolia-search-key');\n    const algoliaIndexName = domElement.getAttribute('data-algolia-index-name');\n\n    const searchClient = algoliasearch(algoliaAppID, algoliaSearchKey);\n\n    // Handle main button click\n    const handleButtonClick = (event) => {\n        if (!!expanded) {\n            closeDropdown()\n        } else {\n            openDropdown()\n        }\n    }\n\n    const handleHitClick = (event, hit) => {\n        console.log('hit clicked', hit);\n        closeDropdown();\n        if (!!hit.url) {\n            window.location.href = hit.url;\n        }\n    }\n\n    const handleMenuItemClick = (e, item) => {\n        e.preventDefault();\n        closeDropdown();\n        const search = window.location.search;\n        const params = new URLSearchParams(search);\n        const dev = params.get('dev');\n        setSelectedCategory(item.categoryName);\n    }\n\n    const onHitKeyUp = (event, hit) => {\n        if (event.charCode === 13) {\n            handleHitClick('', hit)\n        }\n    }\n\n    const closeDropdown = () => {\n        setExpanded(false);\n    }\n\n    const openDropdown = () => {\n        setExpanded(true);\n    }\n\n    const renderHit = ({ hit }) => <p tabindex=\"0\" onKeyPress={e => { onHitKeyUp(e, hit) }} onClick={(e) => { handleHitClick(e, hit) }}>{hit.title}</p>;\n\n    const renderResults = connectStateResults(({ searchState, searchResults }) =>\n        searchState && searchState.query ? (\n\n            searchResults && searchResults.nbHits !== 0 ? <Hits hitComponent={renderHit} /> : <p className=\"products-component__search-no-results\">Nothing found in Products</p>\n        ) : renderMenu()\n    );\n\n    const renderSearchBox = () => (\n        <SearchBox translations={{\n            submitTitle: 'Submit your search query.',\n            resetTitle: 'Clear your search query.',\n            placeholder: 'Search a product...',\n        }} onReset={() => {\n            console.log('reset');\n        }} />\n    )\n\n    const renderMenu = () => (\n        <ul className=\"products-component__dropdown-menu\" role=\"menu\">\n            {!!menuItems && menuItems.length > 0 && menuItems.map((item, i) => (\n                <li key={`${item.title}-${i}`}>\n                    <a href={item.url} role=\"menuitem\" className=\"products-component__dropdown-menu-item\" onClick={e => { handleMenuItemClick(e, item) }}>\n                        <div className=\"products-component__dropdown-menu-item-image\" style={{ backgroundImage: `url(${item.image})` }}></div>\n                        <div className=\"products-component__dropdown-menu-item-text\">\n                            <p className=\"products-component__dropdown-menu-item-subtitle\">{item.subtitle}</p>\n                            <p className=\"products-component__dropdown-menu-item-title\">{item.title}</p>\n                        </div>\n                    </a>\n                </li>\n            ))}\n        </ul>\n    )\n\n    const renderDropdown = () => (\n        <div className={`products-component__dropdown products-component__dropdown--${dropdownAlignment}`}>\n            {renderSearchBox()}\n            {renderResults()}\n        </div>\n    )\n\n    // Listen to window resize\n    useEffect(() => {\n        function updatedropdownAlignment() {\n            if (!!componentRef.current) {\n                const offsetRight = window.innerWidth - componentRef.current.offsetLeft - componentRef.current.offsetWidth;\n                if (offsetRight < 200) {\n                    if (componentRef.current.offsetLeft < 150) {\n                        setDropdownAlignment('center');\n                    } else {\n                        setDropdownAlignment('right');\n                    }\n                } else {\n                    setDropdownAlignment('left');\n                }\n            }\n\n        }\n        window.addEventListener('resize', updatedropdownAlignment);\n        updatedropdownAlignment();\n        return () => window.removeEventListener('resize', updatedropdownAlignment);\n    }, []);\n\n\n    // Handle click outside the component\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (componentRef.current && !componentRef.current.contains(event.target)) {\n                closeDropdown()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [componentRef]);\n\n    return !!algoliaAppID && !!algoliaSearchKey && !!algoliaIndexName ? (\n        <>\n            <InstantSearch searchClient={searchClient} indexName={algoliaIndexName}>\n                <div className=\"products-component\" id=\"products-component\" ref={componentRef}>\n                    <button\n                        aria-haspopup=\"true\"\n                        aria-expanded={expanded}\n                        onClick={handleButtonClick}\n                        tabIndex=\"0\"\n                        className={`products-component__button ${expanded ? 'dropdown-opened' : 'dropdown-closed'}`}\n                    >\n                        <ProductsIcon />\n                        <span>Products</span>\n                    </button>\n                    {!!expanded ? renderDropdown() : null}\n\n                </div>\n            </InstantSearch>\n            <InstantSearch searchClient={searchClient} indexName={algoliaIndexName}>\n                <ProductsDisplay\n                    isOpened={!!selectedCategory}\n                    onClose={() => {\n                        setSelectedCategory(null);\n                    }}\n                    selectedCategory={selectedCategory}\n                    menuItems={menuItems}\n                />\n            </InstantSearch>\n        </>\n\n    ) : null;\n}\n\nexport default Products;\n","/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductsIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Modal/index.js",[],"/Users/milukove/dev/permobil-navigator/src/components/ProductsDisplay/index.js",["98","99","100","101","102","103","104"],"/Users/milukove/dev/permobil-navigator/src/components/User/index.js",["105"],"import React, { useState, useEffect, useRef } from 'react';\nimport './style.scss';\nimport Modal from '../Modal'\nimport EditProfileIcon from '../Icons/EditProfileIcon'\nimport PreferencesIcon from '../Icons/PreferencesIcon'\nimport LogoutIcon from '../Icons/LogoutIcon'\n\nconst User = ({ domElement }) => {\n    const componentRef = useRef(null);\n    const [user, setUser] = useState(null)\n    const [expanded, setExpanded] = useState(false)\n    const [modalOpened, setModalOpened] = useState(false);\n    const [dropdownAlignment, setDropdownAlignment] = useState('left')\n    const booya = window.booya;\n    const preferencesURL = domElement.getAttribute('data-preferences-url')\n\n\n    const handleBooyaEvents = () => {\n        booya.ready(function () {\n            booya.on(booya.events.IDENTIFY_FAILED, function (e) {\n                console.log('auth failed');\n                setUser(null);\n            });\n\n            booya.on(booya.events.IDENTIFY_SUCCESS, function (e) {\n                console.log('auth success');\n                setUser(e.user);\n                setModalOpened(false);\n            });\n\n            booya.on(booya.events.IDENTIFY_SUCCESS, function (e) {\n                console.log('auth success');\n                setUser(e.user);\n                setModalOpened(false);\n            });\n        });\n    }\n\n    const handleSignUpClick = (e) => {\n        setModalOpened(false);\n        if (!!booya) {\n            setModalOpened(true);\n            setTimeout(() => {\n                booya.widgets.renderAuthWidgets({\n                    target: '#booya-wrapper',\n                    signIn: false,\n                    signUp: true\n                })\n            }, 100);\n        }\n    }\n\n    const handleLogInClick = (e) => {\n        setModalOpened(false);\n        if (!!booya) {\n            setModalOpened(true);\n            setTimeout(() => {\n                booya.widgets.renderAuthWidgets({\n                    target: '#booya-wrapper',\n                    signUp: false,\n                    signIn: true\n                })\n            }, 100);\n        }\n    }\n\n    const handleUserButtonClick = (e) => {\n        setExpanded(!expanded)\n    }\n\n    const handleLogoutClick = (e) => {\n        e.preventDefault();\n        if (!!booya) {\n            booya.logOut();\n        }\n    }\n\n    const handleEditProfileClick = (e) => {\n        e.preventDefault();\n        if (!!booya) {\n            setModalOpened(true);\n            setTimeout(() => {\n                booya.widgets.renderProfileForm('<h3>Edit Profile</h3>', null, null, { target: '#booya-wrapper' })\n            }, 100);\n        }\n\n    }\n\n    const renderDropdown = () => (\n        <div className={`user-component__dropdown user-component__dropdown--${dropdownAlignment}`}>\n            <ul>\n                <li><a href=\"#edit-profile\" onClick={handleEditProfileClick}><EditProfileIcon /><span>Edit Profile</span></a></li>\n                {!!preferencesURL && (\n                    <li><a href={preferencesURL}><PreferencesIcon /><span>Preferences</span></a></li>\n                )}\n                <li><a href=\"#logout\" onClick={handleLogoutClick}><LogoutIcon /><span>Logout</span></a></li>\n            </ul>\n        </div >\n    )\n\n    const renderUserButton = () => (\n        <>\n            <button\n                className={`user-component__user-button ${!!expanded ? 'user-component__user-button--opened' : ''}`}\n                aria-haspopup=\"true\"\n                aria-expanded={expanded}\n                tabIndex=\"0\"\n                onClick={handleUserButtonClick}\n            >\n                {!!user.avatar && (\n                    <span\n                        className=\"user-component__user-button-avatar\"\n                        style={{ backgroundImage: `url(${user.avatar})` }}\n                    />\n                )}\n                <span className=\"user-component__user-button-name\">{user.first_name}</span>\n            </button>\n            {!!expanded ? renderDropdown() : null}\n        </>\n    )\n\n    // Listen to window resize\n    useEffect(() => {\n        function updatedropdownAlignment() {\n            const offsetRight = window.innerWidth - componentRef.current.offsetLeft - componentRef.current.offsetWidth;\n            if (offsetRight < 200) {\n                if (componentRef.current.offsetLeft < 150) {\n                    setDropdownAlignment('center');\n                } else {\n                    setDropdownAlignment('right');\n                }\n            } else {\n                setDropdownAlignment('left');\n            }\n        }\n        window.addEventListener('resize', updatedropdownAlignment);\n        updatedropdownAlignment();\n        return () => window.removeEventListener('resize', updatedropdownAlignment);\n    }, []);\n\n    // Listen for booya events\n    useEffect(() => {\n        if (!!booya) {\n            handleBooyaEvents();\n        }\n    }, [])\n\n    // Handle click outside the component\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (componentRef.current && !componentRef.current.contains(event.target)) {\n                setExpanded(false)\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [componentRef]);\n\n    console.log('user', user);\n\n    return !!booya ? (\n        <div className=\"user-component\" id=\"contact-component\" ref={componentRef}>\n            {!!user && !!user.id ? renderUserButton() : (\n                <>\n                    <button className=\"user-component__auth-button\" onClick={handleSignUpClick}>Sign up</button>\n                    <button className=\"user-component__auth-button\" onClick={handleLogInClick}>Log in</button>\n                </>\n            )}\n            <Modal\n                modalIsOpen={!!modalOpened}\n                closeModal={() => {\n                    setModalOpened(false)\n                }}\n                width=\"auto\"\n            >\n                <div className=\"user-component__modal\">\n                    <div id=\"booya-wrapper\"></div>\n                </div>\n            </Modal>\n        </div>\n    ) : null;\n}\n\nexport default User;\n","/Users/milukove/dev/permobil-navigator/src/components/Icons/EditProfileIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/LogoutIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/PreferencesIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Search/index.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/CloseIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/DocumentIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/ChevronLeftIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/LoadingIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/ArrowRightIcon.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":345,"column":8,"nodeType":"112","endLine":345,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":68,"column":15,"nodeType":"116","messageId":"117","endLine":68,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":48,"column":12,"nodeType":"116","messageId":"117","endLine":48,"endColumn":26},{"ruleId":"114","severity":1,"message":"119","line":48,"column":28,"nodeType":"116","messageId":"117","endLine":48,"endColumn":45},{"ruleId":"114","severity":1,"message":"120","line":49,"column":12,"nodeType":"116","messageId":"117","endLine":49,"endColumn":28},{"ruleId":"114","severity":1,"message":"121","line":49,"column":30,"nodeType":"116","messageId":"117","endLine":49,"endColumn":49},{"ruleId":"114","severity":1,"message":"122","line":55,"column":11,"nodeType":"116","messageId":"117","endLine":55,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":199,"column":25,"nodeType":"125","endLine":210,"endColumn":26},{"ruleId":"110","severity":1,"message":"126","line":274,"column":8,"nodeType":"112","endLine":274,"endColumn":22,"suggestions":"127"},{"ruleId":"110","severity":1,"message":"128","line":146,"column":8,"nodeType":"112","endLine":146,"endColumn":10,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'savedZip'. Either include it or remove the dependency array.","ArrayExpression",["132"],"no-unused-vars","'dev' is assigned a value but never used.","Identifier","unusedVar","'productFilters' is assigned a value but never used.","'setProductFilters' is assigned a value but never used.","'isFeaturesOpened' is assigned a value but never used.","'setIsFeaturesOpened' is assigned a value but never used.","'CustomSelect' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'closeFilters'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'booya' and 'handleBooyaEvents'. Either include them or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [savedZip]",{"range":"141","text":"142"},"Update the dependencies array to be: [closeFilters, componentRef]",{"range":"143","text":"144"},"Update the dependencies array to be: [booya, handleBooyaEvents]",{"range":"145","text":"146"},[14505,14507],"[savedZip]",[13822,13836],"[closeFilters, componentRef]",[4873,4875],"[booya, handleBooyaEvents]"]