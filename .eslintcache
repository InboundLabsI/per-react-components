[{"/Users/milukove/dev/permobil-navigator/src/App.js":"1","/Users/milukove/dev/permobil-navigator/src/index.js":"2","/Users/milukove/dev/permobil-navigator/src/components/Contact/index.js":"3","/Users/milukove/dev/permobil-navigator/src/components/Icons/ContactsIcon.js":"4","/Users/milukove/dev/permobil-navigator/src/components/Icons/UserHeadsetIcon.js":"5","/Users/milukove/dev/permobil-navigator/src/components/Icons/QuestionCircleIcon.js":"6","/Users/milukove/dev/permobil-navigator/src/components/Icons/LocationIcon.js":"7","/Users/milukove/dev/permobil-navigator/src/components/Products/index.js":"8","/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductsIcon.js":"9","/Users/milukove/dev/permobil-navigator/src/components/Modal/index.js":"10","/Users/milukove/dev/permobil-navigator/src/components/ProductsDisplay/index.js":"11","/Users/milukove/dev/permobil-navigator/src/components/User/index.js":"12","/Users/milukove/dev/permobil-navigator/src/components/Icons/EditProfileIcon.js":"13","/Users/milukove/dev/permobil-navigator/src/components/Icons/LogoutIcon.js":"14","/Users/milukove/dev/permobil-navigator/src/components/Icons/PreferencesIcon.js":"15","/Users/milukove/dev/permobil-navigator/src/components/Search/index.js":"16","/Users/milukove/dev/permobil-navigator/src/components/Icons/CloseIcon.js":"17","/Users/milukove/dev/permobil-navigator/src/components/Icons/DocumentIcon.js":"18","/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductIcon.js":"19"},{"size":966,"mtime":1610477304969,"results":"20","hashOfConfig":"21"},{"size":307,"mtime":1607654245239,"results":"22","hashOfConfig":"21"},{"size":13359,"mtime":1610490767381,"results":"23","hashOfConfig":"21"},{"size":1715,"mtime":1608252499280,"results":"24","hashOfConfig":"21"},{"size":2092,"mtime":1607697247627,"results":"25","hashOfConfig":"21"},{"size":1457,"mtime":1607697461152,"results":"26","hashOfConfig":"21"},{"size":1502,"mtime":1607718827415,"results":"27","hashOfConfig":"21"},{"size":7293,"mtime":1608441084514,"results":"28","hashOfConfig":"21"},{"size":1779,"mtime":1608252071625,"results":"29","hashOfConfig":"21"},{"size":1390,"mtime":1610477213529,"results":"30","hashOfConfig":"21"},{"size":7638,"mtime":1608697790822,"results":"31","hashOfConfig":"21"},{"size":6217,"mtime":1610477213529,"results":"32","hashOfConfig":"21"},{"size":1232,"mtime":1610477213528,"results":"33","hashOfConfig":"21"},{"size":1133,"mtime":1610477213529,"results":"34","hashOfConfig":"21"},{"size":2834,"mtime":1610477213529,"results":"35","hashOfConfig":"21"},{"size":5247,"mtime":1610499850700,"results":"36","hashOfConfig":"21"},{"size":422,"mtime":1610494535535,"results":"37","hashOfConfig":"21"},{"size":1754,"mtime":1610498852082,"results":"38","hashOfConfig":"21"},{"size":1262,"mtime":1610498371266,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qmtvmi",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/milukove/dev/permobil-navigator/src/App.js",[],"/Users/milukove/dev/permobil-navigator/src/index.js",[],["81","82"],"/Users/milukove/dev/permobil-navigator/src/components/Contact/index.js",["83","84","85"],"/Users/milukove/dev/permobil-navigator/src/components/Icons/ContactsIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/UserHeadsetIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/QuestionCircleIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/LocationIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Products/index.js",["86"],"import React, { useState, useEffect, useRef } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';\nimport './style.scss';\nimport ProductsIcon from '../Icons/ProductsIcon'\nimport ProductsDisplay from '../ProductsDisplay'\n\nconst menuItems = [\n    {\n        subtitle: 'EXPLORE',\n        title: 'Power Wheelchairs',\n        image: 'https://f.hubspotusercontent00.net/hubfs/1624307/navigator-components/power-wheelchairs.png',\n        url: 'https://permobilus.com/products/power-wheelchairs-by-permobil',\n        categoryName: 'Power Wheelchairs',\n        order: 1\n    },\n    {\n        subtitle: 'EXPLORE',\n        title: 'Manual Wheelchairs',\n        image: 'https://f.hubspotusercontent00.net/hubfs/1624307/navigator-components/manual-wheelchairs.png',\n        url: 'https://permobilus.com/products/tilite-manual-wheelchairs-smartdrive-power-assist/',\n        categoryName: 'Manual Wheelchairs',\n        order: 2\n    },\n    {\n        subtitle: 'EXPLORE',\n        title: 'Seating / Positioning',\n        image: 'https://f.hubspotusercontent00.net/hubfs/1624307/navigator-components/seating.png',\n        url: 'https://permobilus.com/products/seating-and-positioning-by-roho/',\n        categoryName: 'Seating and Positioning',\n        order: 3\n    }\n]\n\nconst Products = ({ domElement }) => {\n    const [expanded, setExpanded] = useState(false);\n    const [dropdownAlignment, setDropdownAlignment] = useState('left');\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const componentRef = useRef(null);\n    const algoliaAppID = domElement.getAttribute('data-algolia-app-id');\n    const algoliaSearchKey = domElement.getAttribute('data-algolia-search-key');\n    const algoliaIndexName = domElement.getAttribute('data-algolia-index-name');\n\n    const searchClient = algoliasearch(algoliaAppID, algoliaSearchKey);\n\n    // Handle main button click\n    const handleButtonClick = (event) => {\n        if (!!expanded) {\n            closeDropdown()\n        } else {\n            openDropdown()\n        }\n    }\n\n    const handleHitClick = (event, hit) => {\n        console.log('hit clicked', hit);\n        closeDropdown();\n        if (!!hit.url) {\n            window.location.href = hit.url;\n        }\n    }\n\n    const handleMenuItemClick = (e, item) => {\n        e.preventDefault();\n        closeDropdown();\n        const search = window.location.search;\n        const params = new URLSearchParams(search);\n        const dev = params.get('dev');\n        setSelectedCategory(item.categoryName);\n    }\n\n    const onHitKeyUp = (event, hit) => {\n        if (event.charCode === 13) {\n            handleHitClick('', hit)\n        }\n    }\n\n    const closeDropdown = () => {\n        setExpanded(false);\n    }\n\n    const openDropdown = () => {\n        setExpanded(true);\n    }\n\n    const renderHit = ({ hit }) => <p tabindex=\"0\" onKeyPress={e => { onHitKeyUp(e, hit) }} onClick={(e) => { handleHitClick(e, hit) }}>{hit.title}</p>;\n\n    const renderResults = connectStateResults(({ searchState }) =>\n        searchState && searchState.query ? (\n            <Hits hitComponent={renderHit} />\n        ) : null\n    );\n\n    const renderSearchBox = () => (\n        <SearchBox translations={{\n            submitTitle: 'Submit your search query.',\n            resetTitle: 'Clear your search query.',\n            placeholder: 'Search a product...',\n        }} />\n    )\n\n    const renderMenu = () => (\n        <ul className=\"products-component__dropdown-menu\" role=\"menu\">\n            {!!menuItems && menuItems.length > 0 && menuItems.map((item, i) => (\n                <li key={`${item.title}-${i}`}>\n                    <a href={item.url} role=\"menuitem\" className=\"products-component__dropdown-menu-item\" onClick={e => { handleMenuItemClick(e, item) }}>\n                        <div className=\"products-component__dropdown-menu-item-image\" style={{ backgroundImage: `url(${item.image})` }}></div>\n                        <div className=\"products-component__dropdown-menu-item-text\">\n                            <p className=\"products-component__dropdown-menu-item-subtitle\">{item.subtitle}</p>\n                            <p className=\"products-component__dropdown-menu-item-title\">{item.title}</p>\n                        </div>\n                    </a>\n                </li>\n            ))}\n        </ul>\n    )\n\n    const renderDropdown = () => (\n        <div className={`products-component__dropdown products-component__dropdown--${dropdownAlignment}`}>\n            {renderMenu()}\n            {renderSearchBox()}\n            {renderResults()}\n        </div>\n    )\n\n    // Listen to window resize\n    useEffect(() => {\n        function updatedropdownAlignment() {\n            if (!!componentRef.current) {\n                const offsetRight = window.innerWidth - componentRef.current.offsetLeft - componentRef.current.offsetWidth;\n                if (offsetRight < 200) {\n                    if (componentRef.current.offsetLeft < 150) {\n                        setDropdownAlignment('center');\n                    } else {\n                        setDropdownAlignment('right');\n                    }\n                } else {\n                    setDropdownAlignment('left');\n                }\n            }\n\n        }\n        window.addEventListener('resize', updatedropdownAlignment);\n        updatedropdownAlignment();\n        return () => window.removeEventListener('resize', updatedropdownAlignment);\n    }, []);\n\n\n    // Handle click outside the component\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (componentRef.current && !componentRef.current.contains(event.target)) {\n                closeDropdown()\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [componentRef]);\n\n    return !!algoliaAppID && !!algoliaSearchKey && !!algoliaIndexName ? (\n        <>\n            <InstantSearch searchClient={searchClient} indexName={algoliaIndexName}>\n                <div className=\"products-component\" id=\"products-component\" ref={componentRef}>\n                    <button\n                        aria-haspopup=\"true\"\n                        aria-expanded={expanded}\n                        onClick={handleButtonClick}\n                        tabIndex=\"0\"\n                        className={`products-component__button ${expanded ? 'dropdown-opened' : 'dropdown-closed'}`}\n                    >\n                        <ProductsIcon />\n                        <span>Products</span>\n                    </button>\n                    {!!expanded ? renderDropdown() : null}\n\n                </div>\n            </InstantSearch>\n            <InstantSearch searchClient={searchClient} indexName={algoliaIndexName}>\n                <ProductsDisplay\n                    isOpened={!!selectedCategory}\n                    onClose={() => {\n                        setSelectedCategory(null);\n                    }}\n                    selectedCategory={selectedCategory}\n                    menuItems={menuItems}\n                />\n            </InstantSearch>\n        </>\n\n    ) : null;\n}\n\nexport default Products;\n","/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductsIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Modal/index.js",[],"/Users/milukove/dev/permobil-navigator/src/components/ProductsDisplay/index.js",["87","88"],"import React, { useRef, useEffect } from 'react'\nimport {\n    connectCurrentRefinements,\n    Stats,\n    connectMenu,\n    InfiniteHits,\n    MenuSelect\n} from 'react-instantsearch-dom';\nimport './style.scss';\n\nconst ProductsDisplay = (props) => {\n    const { isOpened, onClose, selectedCategory, menuItems } = props;\n    const componentRef = useRef(null);\n\n    const closeFilters = () => {\n        onClose();\n    }\n\n    const renderHit = ({ hit }) => {\n        const hitImage = !!hit.media && !!hit.media.thumbnails && !!hit.media.thumbnails.large ? hit.media.thumbnails.large : '';\n\n        return (<a href={hit.url} className=\"products-display-component__results-hit\">\n            <div className=\"products-display-component__results-hit-image\" style={{ backgroundImage: `url(${hitImage})` }}></div>\n            <div className=\"products-display-component__results-hit-text\">\n                <span>{hit.title}</span>\n            </div>\n        </a>)\n    }\n\n    const ProductsTitle = connectCurrentRefinements(({ items }) => {\n        const categoryItem = items.find(item => item.attribute === 'categories');\n        return !!categoryItem ? (<span>{categoryItem.currentRefinement}</span>) : null;\n    })\n\n    const CurrentRefinements = connectCurrentRefinements(({ items, refine }) => items.length > 0 ? <div className=\"products-display-component__results-refinements\">\n        {items.map(item => (\n            <button key={item.label} onClick={(e) => {\n                e.preventDefault();\n                refine(item.value)\n            }}>\n                <span>{item.currentRefinement}</span>\n                <svg width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M5.14648 3.875L7.35938 1.68359L7.81055 1.23242C7.875 1.16797 7.875 1.06055 7.81055 0.974609L7.33789 0.501953C7.25195 0.4375 7.14453 0.4375 7.08008 0.501953L4.4375 3.16602L1.77344 0.501953C1.70898 0.4375 1.60156 0.4375 1.51562 0.501953L1.04297 0.974609C0.978516 1.06055 0.978516 1.16797 1.04297 1.23242L3.70703 3.875L1.04297 6.53906C0.978516 6.60352 0.978516 6.71094 1.04297 6.79688L1.51562 7.26953C1.60156 7.33398 1.70898 7.33398 1.77344 7.26953L4.4375 4.60547L6.62891 6.81836L7.08008 7.26953C7.14453 7.33398 7.25195 7.33398 7.33789 7.26953L7.81055 6.79688C7.875 6.71094 7.875 6.60352 7.81055 6.53906L5.14648 3.875Z\" fill=\"#A7A9AC\" />\n                </svg>\n            </button>\n        ))}\n    </div> : null)\n\n    const renderResults = () => (\n        <div className=\"products-display-component__results\">\n            <div className=\"products-display-component__results-header\">\n                <CurrentRefinements transformItems={items =>\n                    items.filter(item => item.attribute !== 'categories')\n                } />\n                <div className=\"products-display-component__results-title\">\n                    <Stats\n                        translations={{\n                            stats(nbHits) {\n                                return nbHits;\n                            },\n                        }}\n                    />\n                    <ProductsTitle transformItems={items =>\n                        items.filter(item => item.attribute === 'categories')\n                    } />\n                </div>\n            </div>\n            <div className=\"products-display-component__results-body\">\n                <InfiniteHits hitComponent={renderHit} />\n            </div>\n        </div>\n    )\n\n    const CategoriesMenu = connectMenu(({ items, currentRefinement, refine }) => {\n        return (\n            <ul className=\"products-display-component__filters-categories\">\n                {items.filter(item => menuItems.map(i => i.categoryName).includes(item.label)).map(item => {\n                    const menuItem = menuItems.find(i => i.categoryName === item.label);\n                    if (!!menuItem) {\n                        item.order = menuItem.order\n                    }\n                    return item;\n                }).sort((a, b) => a.order - b.order).map(item => {\n                    const menuItem = menuItems.find(i => i.categoryName === item.label);\n                    return (<li key={item.label}>\n                        <a\n                            href=\"#\"\n                            onClick={event => {\n                                event.preventDefault();\n                                console.log('currentRefinement', currentRefinement);\n                                //refine(currentRefinement[0]);\n                                if (!item.isRefined) {\n                                    refine(item.value);\n                                }\n                            }}\n                            className={item.isRefined ? 'active' : 'not-active'}\n                        >\n                            {!!menuItem.image && (<div style={{ backgroundImage: `url(${menuItem.image})` }}></div>)}\n                            <span>{item.label}</span>\n                        </a>\n                    </li>)\n                })}\n            </ul>\n        )\n    })\n\n    const renderFilters = () => (\n        <div className=\"products-display-component__filters\">\n            <div className=\"products-display-component__filters-header\">\n                <span className=\"products-display-component__filters-title\">FILTERS</span>\n                <svg onClick={closeFilters} width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M10.0469 8L14.875 3.21875L15.8594 2.23438C16 2.09375 16 1.85938 15.8594 1.67188L14.8281 0.640625C14.6406 0.5 14.4062 0.5 14.2656 0.640625L8.5 6.45312L2.6875 0.640625C2.54688 0.5 2.3125 0.5 2.125 0.640625L1.09375 1.67188C0.953125 1.85938 0.953125 2.09375 1.09375 2.23438L6.90625 8L1.09375 13.8125C0.953125 13.9531 0.953125 14.1875 1.09375 14.375L2.125 15.4062C2.3125 15.5469 2.54688 15.5469 2.6875 15.4062L8.5 9.59375L13.2812 14.4219L14.2656 15.4062C14.4062 15.5469 14.6406 15.5469 14.8281 15.4062L15.8594 14.375C16 14.1875 16 13.9531 15.8594 13.8125L10.0469 8Z\" fill=\"currentColor\" />\n                </svg>\n            </div>\n            <div className=\"products-display-component__filters-body\">\n                <CategoriesMenu attribute=\"categories\" defaultRefinement={selectedCategory} limit={100} />\n                <div className=\"products-display-component__filters-select\">\n                    <label><span>Diagnostic</span><br /><MenuSelect attribute=\"filters.diagnostic\" /></label>\n                </div>\n                <div className=\"products-display-component__filters-select\">\n                    <label><span>Movement Style</span><br /><MenuSelect attribute=\"filters.movement\" /></label>\n                </div>\n                <div className=\"products-display-component__filters-select\">\n                    <label><span>Your Weight</span><br /><MenuSelect attribute=\"filters.weight\" /></label>\n                </div>\n            </div>\n        </div>\n    )\n\n    // Handle click outside the component\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (componentRef.current && !componentRef.current.contains(event.target)) {\n                closeFilters();\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [componentRef]);\n\n    return isOpened ? (\n        <div className=\"products-display-component\" ref={componentRef}>\n            {renderFilters()}\n            {renderResults()}\n        </div>\n    ) : null;\n}\n\nexport default ProductsDisplay\n","/Users/milukove/dev/permobil-navigator/src/components/User/index.js",["89"],"/Users/milukove/dev/permobil-navigator/src/components/Icons/EditProfileIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/LogoutIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/PreferencesIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Search/index.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/CloseIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/DocumentIcon.js",[],"/Users/milukove/dev/permobil-navigator/src/components/Icons/ProductIcon.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":12,"column":22,"nodeType":"96","messageId":"97","endLine":12,"endColumn":33},{"ruleId":"94","severity":1,"message":"98","line":16,"column":12,"nodeType":"96","messageId":"97","endLine":16,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":132,"column":17,"nodeType":"101","endLine":132,"endColumn":76},{"ruleId":"94","severity":1,"message":"102","line":68,"column":15,"nodeType":"96","messageId":"97","endLine":68,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":86,"column":25,"nodeType":"101","endLine":97,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":141,"column":8,"nodeType":"105","endLine":141,"endColumn":22,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":146,"column":8,"nodeType":"105","endLine":146,"endColumn":10,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'setLocation' is assigned a value but never used.","Identifier","unusedVar","'guessedZip' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dev' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'closeFilters'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'booya' and 'handleBooyaEvents'. Either include them or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [closeFilters, componentRef]",{"range":"117","text":"118"},"Update the dependencies array to be: [booya, handleBooyaEvents]",{"range":"119","text":"120"},[7401,7415],"[closeFilters, componentRef]",[4873,4875],"[booya, handleBooyaEvents]"]